/**
 * CatsClash - Game Logic
 * –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å:
 * - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 * - –ê–Ω–∏–º–∞—Ü–∏–µ–π –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤
 * - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Telegram WebApp
 * - –û–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  CASE_OPEN_DURATION: 5000, // 5 —Å–µ–∫—É–Ω–¥ –∞–Ω–∏–º–∞—Ü–∏–∏
  SPIN_ANIMATION_CLASS: 'case-spin',
  BALANCE_CHANGE_ANIMATION_CLASS: 'balance-pulse'
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  const isMobile = checkMobileDevice();
  initTelegramWebApp();
  setupCases();
  setupEventListeners();
  
  if (isMobile) {
    optimizeForMobile();
  }
});

// ======================
// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// ======================

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
 */
function checkMobileDevice() {
  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  console.log(`Mobile device: ${isMobile}`);
  return isMobile;
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
function optimizeForMobile() {
  // –§–∏–∫—Å –¥–ª—è 100vh –Ω–∞ –º–æ–±–∏–ª–∫–∞—Ö
  document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`);
  window.addEventListener('resize', () => {
    document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`);
  });

  // –û—Ç–∫–ª—é—á–∞–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
  document.addEventListener('touchmove', (e) => {
    if (e.scale !== 1) e.preventDefault();
  }, { passive: false });

  // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  document.querySelectorAll('img').forEach(img => {
    img.loading = 'lazy';
  });
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
 */
function initTelegramWebApp() {
  if (window.Telegram?.WebApp) {
    console.log('Telegram WebApp detected');
    Telegram.WebApp.expand();
    Telegram.WebApp.enableClosingConfirmation();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    const user = Telegram.WebApp.initDataUnsafe?.user;
    if (user) {
      updateUserProfile(user);
    }
  }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function updateUserProfile(user) {
  const usernameElement = document.querySelector('.username');
  const avatarElement = document.querySelector('.profile-img');
  
  if (usernameElement) {
    usernameElement.textContent = user.first_name || 'Player';
  }
  
  if (avatarElement && user.photo_url) {
    avatarElement.src = user.photo_url;
  }
}

// ======================
// –õ–æ–≥–∏–∫–∞ –∫–µ–π—Å–æ–≤
// ======================

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–µ–π—Å–æ–≤
 */
function setupCases() {
  const cases = document.querySelectorAll('.case-card');
  
  cases.forEach(caseElement => {
    caseElement.addEventListener('click', () => {
      if (caseElement.classList.contains('disabled')) return;
      
      const caseType = caseElement.getAttribute('data-case');
      openCase(caseElement, caseType);
    });
  });
}

/**
 * –ê–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
 */
async function openCase(caseElement, caseType) {
  try {
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    caseElement.classList.add('disabled');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const caseImage = caseElement.querySelector('.case-image');
    caseImage.classList.add(CONFIG.SPIN_ANIMATION_CLASS);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ä–≤–µ—Ä–∞
    const result = await simulateCaseOpening(caseType);
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    caseImage.classList.remove(CONFIG.SPIN_ANIMATION_CLASS);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    showResultModal(result.item);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    updateBalance(result.balance);
    
  } catch (error) {
    console.error('Case opening error:', error);
    showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞');
  } finally {
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    caseElement.classList.remove('disabled');
  }
}

/**
 * –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API)
 */
async function simulateCaseOpening(caseType) {
  return new Promise((resolve) => {
    setTimeout(() => {
      const items = {
        rusty: ["Glock-18 | Moonrise", "USP-S | Cortex", "P250 | –ú—É—Ä–∞–≤—å–∏–Ω—ã–π —É–ª–µ–π"],
        tactical: ["AWP | –ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è", "AK-47 | –û–≥–Ω–µ–Ω–Ω—ã–π –∑–º–µ–π", "‚òÖ –ù–æ–∂ | –£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç"]
      };
      
      const prices = {
        rusty: 500,
        tactical: 3000
      };
      
      // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
      const currentBalance = parseInt(document.getElementById('balance').textContent) || 5000;
      const newBalance = currentBalance - prices[caseType];
      
      resolve({
        item: getRandomItem(items[caseType]),
        balance: newBalance,
        case_type: caseType
      });
    }, CONFIG.CASE_OPEN_DURATION);
  });
}

/**
 * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
 */
function showResultModal(item) {
  const modal = document.createElement('div');
  modal.className = 'result-modal';
  modal.innerHTML = `
    <div class="result-content">
      <h2>üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏:</h2>
      <div class="won-item">${item}</div>
      <button class="tg-button close-btn">OK</button>
    </div>
  `;
  
  document.body.appendChild(modal);
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ
  modal.querySelector('.close-btn').addEventListener('click', () => {
    modal.remove();
  });
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
 */
function updateBalance(newBalance) {
  const balanceElement = document.getElementById('balance');
  if (!balanceElement) return;
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
  balanceElement.classList.add(CONFIG.BALANCE_CHANGE_ANIMATION_CLASS);
  balanceElement.textContent = newBalance;
  
  // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  setTimeout(() => {
    balanceElement.classList.remove(CONFIG.BALANCE_CHANGE_ANIMATION_CLASS);
  }, 1000);
}

// ======================
// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// ======================

/**
 * –°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
 */
function getRandomItem(items) {
  return items[Math.floor(Math.random() * items.length)];
}

/**
 * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
 */
function showError(message) {
  const errorToast = document.createElement('div');
  errorToast.className = 'error-toast';
  errorToast.textContent = message;
  document.body.appendChild(errorToast);
  
  setTimeout(() => {
    errorToast.remove();
  }, 3000);
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
 */
function setupEventListeners() {
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
  window.addEventListener('online', () => showError('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'));
  window.addEventListener('offline', () => showError('–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è'));
}
